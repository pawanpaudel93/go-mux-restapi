version: '3.9'

services:
    db:
        image: postgres
        ports:
            - '5432:5432'
        expose:
            - 5432
        environment:
            POSTGRES_USER: "gorm"
            POSTGRES_PASSWORD: "gorm"
            POSTGRES_DB: "gorm"
            TZ: 'UTC'
            PGTZ: 'UTC'
        networks: 
            - "api.network"
            
    api:
        # It will look for a dockerfile in the project root and build it
        build: .
        # Exposes the port 5000 from a container and binds it to a random port
        ports:
            - "5000"
        restart: on-failure
        environment:
            DB_CONN: "host=db user=gorm password=gorm dbname=gorm sslmode=disable"
        depends_on:
            - db
        links:
            - db
        # Connects the API to a common api.network bridge
        networks: 
            - "api.network"

        # Starts up 5 replicas of the same image
        deploy:
            replicas: 5
        # volumes:
            # - .:/app

    # nginx container
    nginx:
        # specifies the latest nginx image
        image: nginx:latest
        # Connects the conf file of the container to the conf file in our folder
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        # It will start up the nginx only when all api containers have started
        depends_on: 
            - api
        # Connects the port 80 of the nginx container to localhost:80 or localhost
        ports: 
            - "80:80"
        networks: 
            - "api.network"
  
# declares network used to connect all the apps
networks: 
    api.network:
